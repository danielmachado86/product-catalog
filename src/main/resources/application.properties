# Configure the Kafka broker location
kafka.bootstrap.servers=localhost:9092
kafka.schema.registry.url=http://localhost:8081
kafka.value.deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
kafka.value.serializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
kafka.advertised.listeners=PLAINTEXT://localhost:9092

mp.messaging.incoming.in-products.connector=smallrye-kafka
mp.messaging.incoming.in-products.topic=in-products
mp.messaging.incoming.in-products.group.id=product-catalog
mp.messaging.incoming.in-products.auto.offset.reset=earliest
mp.messaging.incoming.in-products.specific.protobuf.value.type=io.dmcapps.proto.catalog.Product

mp.messaging.incoming.in-brands.connector=smallrye-kafka
mp.messaging.incoming.in-brands.topic=in-brands
mp.messaging.incoming.in-brands.group.id=product-catalog
mp.messaging.incoming.in-brands.auto.offset.reset=earliest
mp.messaging.incoming.in-brands.specific.protobuf.value.type=io.dmcapps.proto.catalog.Brand

mp.messaging.incoming.in-categories.connector=smallrye-kafka
mp.messaging.incoming.in-categories.topic=in-categories
mp.messaging.incoming.in-categories.group.id=product-catalog
mp.messaging.incoming.in-categories.auto.offset.reset=earliest
mp.messaging.incoming.in-categories.specific.protobuf.value.type=io.dmcapps.proto.catalog.Category

mp.messaging.outgoing.products.connector=smallrye-kafka
mp.messaging.outgoing.products.topic=products
mp.messaging.outgoing.products.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.products.specific.protobuf.value.type=io.dmcapps.proto.catalog.Product

mp.messaging.outgoing.brands.connector=smallrye-kafka
mp.messaging.outgoing.brands.topic=brands
mp.messaging.outgoing.brands.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.brands.specific.protobuf.value.type=io.dmcapps.proto.catalog.Brand

mp.messaging.outgoing.categories.connector=smallrye-kafka
mp.messaging.outgoing.categories.topic=categories
mp.messaging.outgoing.categories.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.categories.specific.protobuf.value.type=io.dmcapps.proto.catalog.Category


quarkus.http.port=8082

# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = admin
quarkus.datasource.password = admin

quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost:5432/product-catalog

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.jdbc-warnings=true
quarkus.hibernate-orm.log.format-sql=true